var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var angular2_1 = require('angular2/angular2');
var StreamController_1 = require('../../services/rtc_api/StreamController');
var ControllerConfiguration_1 = require('../../services/rtc_api/ControllerConfiguration');
var RoomOptions_1 = require('../../services/rtc_api/RoomOptions');
var StreamFactory_1 = require('../../services/rtc_api/StreamFactory');
var HomeCmp = (function () {
    function HomeCmp(ref) {
        this.ref = ref;
        this.chatBuffer = [];
        this.availableRooms = [];
        this.localStreams = [];
        this.state = 0;
        this.model = {
            message: "Test"
        };
        this._streamController = new StreamController_1.StreamController(new ControllerConfiguration_1.ControllerConfiguration("http://localhost:1239/", "WLU-HOPPER"));
        this.refreshRooms();
    }
    HomeCmp.prototype.askWebcam = function () {
        var self = this;
        StreamFactory_1.StreamFactory.createWebcamStream(true, true, function (stream) {
            if (stream != null) {
                self.localStreams.push(URL.createObjectURL(stream));
                self.activeStream = stream;
                self.moveToChoice();
            }
        });
    };
    HomeCmp.prototype.askScreen = function () {
        var self = this;
        StreamFactory_1.StreamFactory.createScreenStream(function (stream) {
            if (stream != null) {
                self.localStreams.push(URL.createObjectURL(stream));
                self.activeStream = stream;
                self.moveToChoice();
            }
        });
    };
    HomeCmp.prototype.moveToChoice = function () {
        this.state = 1;
        this.ref.detectChanges();
    };
    HomeCmp.prototype.refreshRooms = function () {
        var _this = this;
        var self = this;
        this._streamController.getRoomService().findRooms("", function (roomsFound) {
            self.availableRooms = roomsFound;
            _this.ref.detectChanges();
        });
    };
    HomeCmp.prototype.createRoom = function () {
        var _this = this;
        var roomName = prompt("Name of the room to create; ");
        var options = new RoomOptions_1.RoomOptions(roomName, false);
        this._streamController.getRoomService().createRoom(options, function (success) {
            if (success) {
                alert("Room created!");
            }
            else {
                alert("Failed to create room. Duplicate?");
            }
            _this.refreshRooms();
        });
    };
    HomeCmp.prototype.joinRoom = function () {
        var _this = this;
        var roomName = prompt("Name of the room to join?");
        var options = new RoomOptions_1.RoomOptions(roomName, false);
        var self = this;
        this._streamController.getRoomService().joinRoom(options, [self.activeStream], function (success, roomContext) {
            if (success) {
                self.activeRoom = roomContext;
                self.state = 2;
                self.ref.detectChanges();
                self.moveToPeers();
                setTimeout(_this.beginPlayback.bind(_this), 500);
                for (var i = 0; i < 100; i++)
                    self.chatBuffer.push("Vaughan: Hello world!");
            }
            else {
                alert("Failed to join room!");
            }
        });
    };
    HomeCmp.prototype.moveToPeers = function () {
        this.activeRoom.on('newstream', this.setupRemoteStream.bind(this));
    };
    HomeCmp.prototype.setupRemoteStream = function (event) {
        this.localStreams.push(URL.createObjectURL(event.stream));
        this.ref.detectChanges();
        setTimeout(this.beginPlayback.bind(this), 500);
    };
    HomeCmp.prototype.beginPlayback = function () {
        var nodes = document.getElementsByTagName('video');
        for (var i = 0; i < nodes.length; i++) {
            nodes[i].play();
        }
    };
    HomeCmp.prototype.sendChatMessage = function (msg) {
        alert(msg);
    };
    HomeCmp = __decorate([
        angular2_1.Component({
            selector: 'home',
            template: "\n    <div id=\"start-state\">\n\n      <div *ng-if=\"state < 2\" class=\"centered\">\n        <h1 style=\"text-align: center; margin-bottom: 32px;\">What would you like to do?</h1>\n\n        <div *ng-if=\"state == 1\" class=\"button-wrapper\">\n          <a (click)=\"joinRoom($event)\" class=\"btn\">Join Room</a>\n          <a (click)=\"createRoom($event)\" class=\"btn\">Create Room</a>\n          <a (click)=\"refreshRooms()\" class=\"btn\">Refresh Rooms</a>\n        </div>\n\n        <div *ng-if=\"state == 0\" class=\"stream-wrapper\">\n          <a (click)=\"askWebcam()\" class=\"btn\">Share Video & Audio</a>\n          <a (click)=\"askScreen()\" class=\"btn\">Share Screen</a>\n        </div>\n\n      </div>\n\n      <!--Video displays here-->\n      <div *ng-if=\"state == 2\">\n    \n       <div class=\"room-list\">\n          <h2>Chat View</h1>\n          <form>\n              <input placeholder=\"Please type a message here...\" id=\"message-box\" autocomplete=\"off\">\n              <button (click)=\"sendChatMessage(myMessage.value)\" class=\"btn\">Send Message</button>        \n          </form>\n                \n            <!--Message area-->\n            <div id=\"chat-messages-feed\">\n              <div class=\"chat-message row\" *ng-for=\"#chatMessage of chatBuffer\">\n                <b>{{chatMessage}}</b>\n                </br> \n              </div> \n          </div>             \n       </div>\n       \n        <div class=\"video-hud\" *ng-for=\"#stream of localStreams\">\n          <video class=\"video-display\" src=\"{{stream}}\" autoplay=\"true\"></video>\n        </div>\n      </div>\n\n      <div *ng-if=\"state < 2\" class=\"room-list\">\n        <h2>Available Rooms</h1>\n        <div class=\"name-container\">\n          <div *ng-for=\"#room of availableRooms\" class=\"room-name\"><a href=\"#\">{{room.roomName}}</a></div> \n        </div>\n     </div>  \n \n    </div>\n\n\n    <div id=\"chat-view\">\n      <div class=\"col-md-12\">\n        <div class=\"row\">\n          <div id=\"chat-sidebar\" class=\"col-sm-2\">\n            <ul>\n              <li *ng-for=\"#name of roomNames\">{{name}}</li>\n            </ul>\n            <form>\n              <input id=\"message-box\">\n            </form>\n                \n            <!--Message area-->\n            <div class=\"row\" *ng-for=\"#chatMessage of chatBuffer\">\n              <b>{{chatMessage}}</b>\n              </br> \n            </div>\n        \n          </div>\n          <div id=\"chat-main\" class=\"col-sm-10\">\n            <!--Video displays here-->\n            <div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  ",
            styles: ["\n    #start-state {\n    \tposition: absolute;\n    \theight: 100%;\n    \twidth: 100%;\n    \ttop: 0;\n    \tleft: 0;\n    \tz-index: 500;\n      background-image: url('assets/img/bg.png')  \n    }\n\n    #start-state .centered {\n     \tposition: absolute;\n        top: 50%;\n        left: 50%;\n        width: 600px;\n        height: 300px;\n        margin-top: -150px;\n        margin-left: -300px;\n   \n       background-color: rgba(0, 0, 0, 0.6);\n       border: solid 1px black;\n       border-radius: 20px; \n       border-width: 3px; \n       padding: 30px;  \n       \n    }\n\n    #start-state .room-list {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      overflow: hidden;\n      width: 220px;\n      background-color: rgba(221, 160, 221, 0.11);\n      border-right: 2px solid black;\n    }\n\n\n    .name-container:nth-child(odd) {\n      background-color: rgba(0, 0, 0, 0.3);\n    }\n\n    #start-state h2 {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    #start-state .room-name {\n      font-weight: bold;\n      text-align: left;\n      padding-left: 4px;\n      margin-top: 8px;\n      font-size: 14px;\n    }\n\n    #start-state .room-name a {\n      color: white;\n      text-overflow: ellipsis;  \n    }\n\n    #start-state input {\n    \tborder-radius: 3px;\n    \tfont-size: 16px;\n    }\n\n    #start-state video {\n      width: 480px;\n      float: left;\n    }\n\n    .btn {\n    \t-moz-box-shadow:inset 1px -1px 3px 0px #91b8b3;\n    \t-webkit-box-shadow:inset 1px -1px 3px 0px #91b8b3;\n    \tbox-shadow:inset 1px -1px 3px 0px #91b8b3;\n    \tbackground-color:#768d87;\n    \t-moz-border-radius:2px;\n    \t-webkit-border-radius:2px;\n    \tborder-radius:2px;\n    \tborder:1px solid #566963;\n    \tcursor:pointer;\n    \tcolor:#ffffff;\n    \tfont-family:Verdana;\n    \tfont-size:15px;\n    \tfont-weight:bold;\n    \tpadding:8px 17px;\n    \ttext-decoration:none;\n    \ttext-shadow:0px -1px 0px #2b665e;\n      padding-top: 15px;\n      text-align: center;\n      display: block;  \n      margin: 12px;\n    }\n    .btn:hover {\n    \tbackground-color:#6c7c7c;\n    }\n    .btn:active {\n    \tposition:relative;\n    \ttop:1px;\n    }\n\n    .video-hud {\n      position: absolute;\n      right: 0;\n      width: 50%;\n      float: right;\n      overflow-x: hidden;\n    }\n\n    #chat-messages-feed {\n      color: white;  \n    }\n\n    .chat-message {\n      margin: 0;\n      font-weight: bold;\n      margin-top: 10px;\n    }\n  "],
            directives: [angular2_1.CORE_DIRECTIVES]
        }), 
        __metadata('design:paramtypes', [angular2_1.ChangeDetectorRef])
    ], HomeCmp);
    return HomeCmp;
})();
exports.HomeCmp = HomeCmp;

//# sourceMappingURL=data:application/json;base64,