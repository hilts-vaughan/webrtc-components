var StreamFactory = (function () {
    function StreamFactory() {
    }
    StreamFactory.doesSupportUserMedia = function () {
        return navigator.getUserMedia != undefined;
    };
    StreamFactory.createWebcamStream = function (captureAudio, captureVideo, callback) {
        if (!this.doesSupportUserMedia()) {
            throw Error("The client does not support capturing webcam streams.");
        }
        navigator.getUserMedia({
            audio: captureAudio,
            video: captureVideo
        }, function (stream) {
            return callback(stream);
        }, function (error) {
            return callback(null);
        });
    };
    StreamFactory.createScreenStream = function (callback) {
        if (!this.doesSupportUserMedia()) {
            throw Error("The client does not support capturing screen streams.");
            navigator.getUserMedia({
                audio: false,
                video: {
                    mandatory: {
                        chromeMediaSource: 'screen',
                        maxWidth: 1920,
                        maxHeight: 1080
                    }
                }
            }, function (stream) {
                return callback(stream);
            }, function (error) {
                return callback(null);
            });
        }
    };
    StreamFactory.createCanvasStream = function (canvas, framerate) {
        if (canvas['captureStream']) {
            return canvas['captureStream'](framerate);
        }
        else {
            throw Error("The client does not support capturing canvas streams.");
        }
    };
    return StreamFactory;
})();
exports.StreamFactory = StreamFactory;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL3J0Y19hcGkvU3RyZWFtRmFjdG9yeS50cyJdLCJuYW1lcyI6WyJTdHJlYW1GYWN0b3J5IiwiU3RyZWFtRmFjdG9yeS5jb25zdHJ1Y3RvciIsIlN0cmVhbUZhY3RvcnkuZG9lc1N1cHBvcnRVc2VyTWVkaWEiLCJTdHJlYW1GYWN0b3J5LmNyZWF0ZVdlYmNhbVN0cmVhbSIsIlN0cmVhbUZhY3RvcnkuY3JlYXRlU2NyZWVuU3RyZWFtIiwiU3RyZWFtRmFjdG9yeS5jcmVhdGVDYW52YXNTdHJlYW0iXSwibWFwcGluZ3MiOiJBQUFBO0lBQUFBO0lBc0VBQyxDQUFDQTtJQXBFZUQsa0NBQW9CQSxHQUFuQ0E7UUFDQ0UsTUFBTUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsWUFBWUEsSUFBSUEsU0FBU0EsQ0FBQ0E7SUFDNUNBLENBQUNBO0lBUWFGLGdDQUFrQkEsR0FBaENBLFVBQWlDQSxZQUFzQkEsRUFBRUEsWUFBc0JBLEVBQUVBLFFBQW1CQTtRQUNuR0csRUFBRUEsQ0FBQUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0Esb0JBQW9CQSxFQUFFQSxDQUFDQSxDQUFFQSxDQUFDQTtZQUNsQ0EsTUFBTUEsS0FBS0EsQ0FBQ0EsdURBQXVEQSxDQUFDQSxDQUFDQTtRQUN0RUEsQ0FBQ0E7UUFFREEsU0FBU0EsQ0FBQ0EsWUFBWUEsQ0FBQ0E7WUFDdEJBLEtBQUtBLEVBQUVBLFlBQVlBO1lBQ25CQSxLQUFLQSxFQUFFQSxZQUFZQTtTQUNuQkEsRUFBRUEsVUFBQ0EsTUFBb0JBO21CQUN2QkEsUUFBUUEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7UUFBaEJBLENBQWdCQSxFQUNmQSxVQUFDQSxLQUF3QkE7bUJBQzFCQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQTtRQUFkQSxDQUFjQSxDQUNkQSxDQUFDQTtJQUNIQSxDQUFDQTtJQVFhSCxnQ0FBa0JBLEdBQWhDQSxVQUFpQ0EsUUFBbUJBO1FBQ25ESSxFQUFFQSxDQUFBQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxvQkFBb0JBLEVBQUVBLENBQUNBLENBQUVBLENBQUNBO1lBQ2xDQSxNQUFNQSxLQUFLQSxDQUFDQSx1REFBdURBLENBQUNBLENBQUNBO1lBRXRFQSxTQUFTQSxDQUFDQSxZQUFZQSxDQUFDQTtnQkFDdEJBLEtBQUtBLEVBQUVBLEtBQUtBO2dCQUNaQSxLQUFLQSxFQUFFQTtvQkFDTkEsU0FBU0EsRUFBRUE7d0JBQ1ZBLGlCQUFpQkEsRUFBRUEsUUFBUUE7d0JBQzNCQSxRQUFRQSxFQUFFQSxJQUFJQTt3QkFDZEEsU0FBU0EsRUFBRUEsSUFBSUE7cUJBQ2ZBO2lCQUNEQTthQUNEQSxFQUFFQSxVQUFDQSxNQUFvQkE7dUJBQ3ZCQSxRQUFRQSxDQUFDQSxNQUFNQSxDQUFDQTtZQUFoQkEsQ0FBZ0JBLEVBRWpCQSxVQUFDQSxLQUF3QkE7dUJBQ3hCQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQTtZQUFkQSxDQUFjQSxDQUNkQSxDQUFDQTtRQUNIQSxDQUFDQTtJQVVEQSxDQVZDSixBQVVBSTtJQUFhSixnQ0FBa0JBLEdBQWhDQSxVQUFpQ0EsTUFBMEJBLEVBQUVBLFNBQWtCQTtRQUM5RUssRUFBRUEsQ0FBQUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDNUJBLE1BQU1BLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLENBQUNBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQzNDQSxDQUFDQTtRQUNEQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUNMQSxNQUFNQSxLQUFLQSxDQUFDQSx1REFBdURBLENBQUNBLENBQUFBO1FBQ3JFQSxDQUFDQTtJQUNGQSxDQUFDQTtJQUNGTCxvQkFBQ0E7QUFBREEsQ0F0RUEsQUFzRUNBLElBQUE7QUF0RVkscUJBQWEsZ0JBc0V6QixDQUFBIiwiZmlsZSI6InNlcnZpY2VzL3J0Y19hcGkvU3RyZWFtRmFjdG9yeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdHJlYW1GYWN0b3J5IHtcblx0XG5cdHByaXZhdGUgc3RhdGljIGRvZXNTdXBwb3J0VXNlck1lZGlhKCkgOiBib29sZWFuIHtcblx0XHRyZXR1cm4gbmF2aWdhdG9yLmdldFVzZXJNZWRpYSAhPSB1bmRlZmluZWQ7XG5cdH1cblx0XG5cdC8qKlxuXHQgKiBBdHRlbXB0cyB0byBjcmVhdGUgYW5kIHJldHVybiBhIGxpdmUgc3RyZWFtIGZyb20gdGhlIHVzZXJzIHdlYmNhbS4gVGhlIHN0cmVhbSBpcyB2YWxpZCBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzZXNzaW9uIG9mIHRoZSB3ZWJwYWdlLlxuXHQgKiBJZiB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uLCBhbiBleGNlcHRpb24gd2lsbCBiZSB0aHJvd24uIFxuXHQgKiBcblx0ICogT3RoZXJ3aXNlLCB0aGUge01lZGlhU3RyZWFtfSBpcyByZXR1cm5lZCBpbiB0aGUgcHJvdmlkZWQgY2FsbGJhY2suIElmIGl0IGZhaWxzLCB0aGUgc3RyZWFtIHdpbGwgYmUgbnVsbC5cblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgY3JlYXRlV2ViY2FtU3RyZWFtKGNhcHR1cmVBdWRpbyA6IGJvb2xlYW4sIGNhcHR1cmVWaWRlbyA6IGJvb2xlYW4sIGNhbGxiYWNrIDogRnVuY3Rpb24pIHtcblx0XHRpZighdGhpcy5kb2VzU3VwcG9ydFVzZXJNZWRpYSgpKVx0IHtcblx0XHRcdHRocm93IEVycm9yKFwiVGhlIGNsaWVudCBkb2VzIG5vdCBzdXBwb3J0IGNhcHR1cmluZyB3ZWJjYW0gc3RyZWFtcy5cIik7IFxuXHRcdH1cblx0XHRcdFx0XG5cdFx0bmF2aWdhdG9yLmdldFVzZXJNZWRpYSh7XG5cdFx0XHRhdWRpbzogY2FwdHVyZUF1ZGlvLFxuXHRcdFx0dmlkZW86IGNhcHR1cmVWaWRlb1xuXHRcdH0sIChzdHJlYW0gOiBNZWRpYVN0cmVhbSkgPT5cblx0XHRcdGNhbGxiYWNrKHN0cmVhbSlcblx0XHQsIChlcnJvciA6IE1lZGlhU3RyZWFtRXJyb3IpID0+XG5cdFx0XHRjYWxsYmFjayhudWxsKVxuXHRcdCk7XG5cdH1cblx0XG5cdC8qKlxuXHQgKiBBdHRlbXB0cyB0byBjcmVhdGUgYW5kIHJldHVybiBhIGxpdmUgc3RyZWFtIG9mIHRoZSBjdXJyZW50IHNjcmVlbiB0aGUgYnJvd3NlciBpcyBob3N0ZWQgb24uIFRoZSBzdHJlYW0gaXMgdmFsaWQgZm9yIHRoZSBsaWZldGltZVxuXHQgKiBvZiB0aGUgZGVza3RvcCBzZXNzaW9uLiBJZiB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uLCBhbiBleGNlcHRpb24gd2lsbCBiZSB0aHJvd24uXG5cdCAqIFxuXHQgKiBPdGhlcndpc2UsIHRoZSB7TWVkaWFTdHJlYW19IGlzIHJldHVybmVkIGluIHRoZSBwcm92aWRlZCBjYWxsYmFjay4gSWYgaXQgZmFpbHMsIHRoZSBzdHJlYW0gd2lsbCBiZSBudWxsLlxuXHQgKi9cblx0cHVibGljIHN0YXRpYyBjcmVhdGVTY3JlZW5TdHJlYW0oY2FsbGJhY2sgOiBGdW5jdGlvbikge1xuXHRcdGlmKCF0aGlzLmRvZXNTdXBwb3J0VXNlck1lZGlhKCkpXHQge1xuXHRcdFx0dGhyb3cgRXJyb3IoXCJUaGUgY2xpZW50IGRvZXMgbm90IHN1cHBvcnQgY2FwdHVyaW5nIHNjcmVlbiBzdHJlYW1zLlwiKTsgXG5cdFx0XG5cdFx0bmF2aWdhdG9yLmdldFVzZXJNZWRpYSh7XG5cdFx0XHRhdWRpbzogZmFsc2UsXG5cdFx0XHR2aWRlbzoge1xuXHRcdFx0XHRtYW5kYXRvcnk6IHtcblx0XHRcdFx0XHRjaHJvbWVNZWRpYVNvdXJjZTogJ3NjcmVlbicsXG5cdFx0XHRcdFx0bWF4V2lkdGg6IDE5MjAsXG5cdFx0XHRcdFx0bWF4SGVpZ2h0OiAxMDgwXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LCAoc3RyZWFtIDogTWVkaWFTdHJlYW0pID0+XG5cdFx0XHRjYWxsYmFjayhzdHJlYW0pXG5cdFx0LCBcblx0XHQoZXJyb3IgOiBNZWRpYVN0cmVhbUVycm9yKSA9PlxuXHRcdFx0Y2FsbGJhY2sobnVsbClcblx0XHQpO1xuXHR9XG5cdFxuXHQvKipcblx0ICogQXR0ZW1wdHMgdG8gY3JlYXRlIGFuZCByZXR1cm4gYSBsaXZlIHN0cmVhbSB7TWVkaWFTdHJlYW19IGZyb20gdGhlIHByb3ZpZGVkIGNhbnZhcyBvYmplY3QuIFRoZSBzdHJlYW0gaXMgdmFsaWQgZm9yIHRoZSBsaWZldGltZSBvZiBcblx0ICogdGhlIGNhbnZhcyBpbiB0aGUgRE9NLiBJZiB0aGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uLCBhbiBleGNlcHRpb24gd2lsbCBiZSB0aHJvd24uXG5cdCAqIFxuXHQgKiBPdGhlcndpc2UsIHRoZSBNZWRpYVN0cmVhbSBpcyByZXR1cm5lZC4gSWYgaXQgZmFpbGVkLCB0aGUgc3RyZWFtIHdpbGwgYmUgbnVsbC5cblx0ICogXG5cdCAqIEBwYXJhbVx0ZnJhbWVyYXRlXHRUaGUgbnVtYmVyIG9mIGZyYW1lcyBwZXIgc2Vjb25kIHRoYXQgdGhlIGNhbnZhcyBzaG91bGQgYmUgY2FwdHVyZWQgYXRcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgY3JlYXRlQ2FudmFzU3RyZWFtKGNhbnZhcyA6IEhUTUxDYW52YXNFbGVtZW50LCBmcmFtZXJhdGUgOiBudW1iZXIpIHtcblx0XHRpZihjYW52YXNbJ2NhcHR1cmVTdHJlYW0nXSkge1xuXHRcdFx0cmV0dXJuIGNhbnZhc1snY2FwdHVyZVN0cmVhbSddKGZyYW1lcmF0ZSk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0dGhyb3cgRXJyb3IoXCJUaGUgY2xpZW50IGRvZXMgbm90IHN1cHBvcnQgY2FwdHVyaW5nIGNhbnZhcyBzdHJlYW1zLlwiKVxuXHRcdH0gXG5cdH1cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=